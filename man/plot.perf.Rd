% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/S3methods-plot.perf.R, R/plot.pls1.R
\name{plot.perf}
\alias{plot.perf}
\alias{plot.perf.pls.mthd}
\alias{plot.perf.spls.mthd}
\alias{plot.perf.plsda.mthd}
\alias{plot.perf.splsda.mthd}
\alias{plot.perf.mint.plsda.mthd}
\alias{plot.perf.mint.splsda.mthd}
\alias{plot.perf.sgccda.mthd}
\title{Plot for model performance}
\usage{
\method{plot}{perf.pls.mthd}(
  x,
  criterion = "MSEP",
  xlab = "Number of components",
  ylab = NULL,
  LimQ2 = 0.0975,
  LimQ2.col = "grey30",
  sd = NULL,
  pch = 1,
  pch.size = 3,
  cex = 1.2,
  col = color.mixo(1),
  title = NULL,
  ...
)

\method{plot}{perf.spls.mthd}(
  x,
  criterion = "Q2",
  xlab = "number of components",
  ylab = NULL,
  LimQ2 = 0.0975,
  LimQ2.col = "darkgrey",
  cTicks = NULL,
  layout = NULL,
  ...
)

\method{plot}{perf.plsda.mthd}(
  x,
  dist = c("all", "max.dist", "centroids.dist", "mahalanobis.dist"),
  measure = c("all", "overall", "BER"),
  col,
  xlab = NULL,
  ylab = NULL,
  overlay = c("all", "measure", "dist"),
  legend.position = c("vertical", "horizontal"),
  sd = TRUE,
  ...
)

\method{plot}{perf.splsda.mthd}(
  x,
  dist = c("all", "max.dist", "centroids.dist", "mahalanobis.dist"),
  measure = c("all", "overall", "BER"),
  col,
  xlab = NULL,
  ylab = NULL,
  overlay = c("all", "measure", "dist"),
  legend.position = c("vertical", "horizontal"),
  sd = TRUE,
  ...
)

\method{plot}{perf.mint.plsda.mthd}(
  x,
  dist = c("all", "max.dist", "centroids.dist", "mahalanobis.dist"),
  measure = c("all", "overall", "BER"),
  col,
  xlab = NULL,
  ylab = NULL,
  study = "global",
  overlay = c("all", "measure", "dist"),
  legend.position = c("vertical", "horizontal"),
  ...
)

\method{plot}{perf.mint.splsda.mthd}(
  x,
  dist = c("all", "max.dist", "centroids.dist", "mahalanobis.dist"),
  measure = c("all", "overall", "BER"),
  col,
  xlab = NULL,
  ylab = NULL,
  study = "global",
  overlay = c("all", "measure", "dist"),
  legend.position = c("vertical", "horizontal"),
  ...
)

\method{plot}{perf.sgccda.mthd}(
  x,
  dist = c("all", "max.dist", "centroids.dist", "mahalanobis.dist"),
  measure = c("all", "overall", "BER"),
  col,
  weighted = TRUE,
  xlab = NULL,
  ylab = NULL,
  overlay = c("all", "measure", "dist"),
  legend.position = c("vertical", "horizontal"),
  sd = TRUE,
  ...
)

\method{plot}{perf.pls.mthd}(
  x,
  criterion = "MSEP",
  xlab = "Number of components",
  ylab = NULL,
  LimQ2 = 0.0975,
  LimQ2.col = "grey30",
  sd = NULL,
  pch = 1,
  pch.size = 3,
  cex = 1.2,
  col = color.mixo(1),
  title = NULL,
  ...
)
}
\arguments{
\item{x}{an \code{perf} object.}

\item{criterion}{character string. What type of validation criterion to plot
for \code{pls} or \code{spls}. One of \code{"MSEP"}, \code{"RMSEP"},
\code{"R2"} or \code{"Q2"}. See \code{\link{perf}}.}

\item{xlab, ylab}{titles for \eqn{x} and \eqn{y} axes.  Typically character
strings, but can be expressions (e.g., \code{expression(R^2)}).}

\item{LimQ2}{numeric value. Signification limit for the components in the
model. Default is \code{LimQ2 = 0.0975}.}

\item{LimQ2.col}{character string specifying the color for the \code{LimQ2}
line to be plotted. If \code{"none"} the line will not be plotted.}

\item{sd}{If 'nrepeat' was used in the call to 'perf', error bar shows the
standard deviation if sd=TRUE}

\item{col}{character (or symbol) color to be used, possibly vector. One
color per distance \code{dist}.}

\item{\dots}{Further arguments sent to \code{\link{xyplot}} function.}

\item{cTicks}{integer vector. Axis tickmark locations for the used number of
components. Default is \code{1:ncomp} (see \code{\link{perf}}).}

\item{layout}{numeric vector of length two giving the number of rows and
columns in a multi panel display. If not specified, \code{plot.perf} tries
to be intelligent.}

\item{dist}{prediction method applied in \code{perf} for \code{plsda} or
\code{splsda}. See \code{\link{perf}}.}

\item{measure}{Two misclassification measure are available: overall
misclassification error \code{overall} or the Balanced Error Rate \code{BER}}

\item{overlay}{parameter to overlay graphs; if 'all', only one graph is
shown with all outputs; if 'measure', a graph is shown per distance; if
'dist', a graph is shown per measure.}

\item{legend.position}{position of the legend, one of "vertical" (only one
column) or "horizontal" (two columns).}

\item{study}{Indicates which study-specific outputs to plot. A character
vector containing some levels of \code{object$study}, "all.partial" to plot
all studies or "global" is expected. Default to "global".}

\item{weighted}{plot either the performance of the Majority vote or the
Weighted vote.}
}
\value{
none

none
}
\description{
Function to plot performance criteria, such as MSEP, RMSEP, \eqn{R^2},
\eqn{Q^2} for s/PLS methods, and classification performance for supervised
methods, as a function of the number of components.

Function to plot performance criteria, such as MSEP, RMSEP, \eqn{R^2},
\eqn{Q^2} for s/PLS methods, and classification performance for supervised
methods, as a function of the number of components.
}
\details{
\code{plot.perf} creates one plot for each response variable in the model,
laid out in a multi panel display.  It uses \code{\link{xyplot}} for
performing the actual plotting.

More details about the prediction distances in \code{?predict} and the
supplemental material of the mixOmics article (Rohart et al. 2017).

\code{plot.perf} creates one plot for each response variable in the model,
laid out in a multi panel display.  It uses \code{\link{xyplot}} for
performing the actual plotting.

More details about the prediction distances in \code{?predict} and the
supplemental material of the mixOmics article (Rohart et al. 2017).
}
\examples{
## ---- plot ffor perf.pls1 and perf.pls2
 data("nutrimouse")
 X <- data.matrix(nutrimouse$gene, rownames.force = TRUE)
 Y <- data.matrix(nutrimouse$lipid, rownames.force = TRUE)
 y <- Y[, "C18.0"]
 
 pls1.liver <- pls(X = X, Y = y, ncomp = 4)
 pls2.liver <- pls(X = X, Y = Y, ncomp = 4)
 spls1.liver <- spls(X = X, Y = y, keepX = rep(10, 4), ncomp = 4)
 spls2.liver <- spls(X = X, Y = Y, keepX = rep(10, 4), ncomp = 4)
 

 perf.pls1.liver  = perf(pls1.liver, validation = 'Mfold', 
                         folds = 3, nrepeat = 3, progressBar = TRUE)
 plot(perf.pls1.liver , criterion = 'Q2')
 perf.pls2.liver  = perf(pls2.liver, validation = 'Mfold', 
                         folds = 3, nrepeat = 3, progressBar = TRUE)
 plot(perf.pls2.liver , criterion = 'Q2.total')
 perf.spls1.liver = perf(spls1.liver, validation = 'Mfold', 
                         folds = 3, nrepeat = 3, progressBar = TRUE)
 plot(perf.spls1.liver , criterion = 'Q2')
 perf.spls2.liver = perf(spls2.liver, validation = 'Mfold', 
                         folds = 3, nrepeat = 3, progressBar = TRUE)
 plot(perf.spls2.liver , criterion = 'Q2.total')
 
 ## ---- plot for perf.(s)plsda
\dontrun{
data(breast.tumors)
X <- breast.tumors$gene.exp
Y <- factor(breast.tumors$sample$treatment)

res <- splsda(X, Y, ncomp = 2, keepX = c(25, 25))
set.seed(42)
breast.perf <- perf(res, nrepeat = 5)

plot(breast.perf)
plot(breast.perf, col=1:3)
plot(breast.perf, col=1:3, sd=FALSE)
}
## ---- plot ffor perf.pls1 and perf.pls2
 data("nutrimouse")
 X <- data.matrix(nutrimouse$gene, rownames.force = TRUE)
 Y <- data.matrix(nutrimouse$lipid, rownames.force = TRUE)
 y <- Y[, "C18.0"]
 
 pls1.liver <- pls(X = X, Y = y, ncomp = 4)
 pls2.liver <- pls(X = X, Y = Y, ncomp = 4)
 spls1.liver <- spls(X = X, Y = y, keepX = rep(10, 4), ncomp = 4)
 spls2.liver <- spls(X = X, Y = Y, keepX = rep(10, 4), ncomp = 4)
 

 perf.pls1.liver  = perf(pls1.liver, validation = 'Mfold', 
                         folds = 3, nrepeat = 3, progressBar = TRUE)
 plot(perf.pls1.liver , criterion = 'Q2')
 perf.pls2.liver  = perf(pls2.liver, validation = 'Mfold', 
                         folds = 3, nrepeat = 3, progressBar = TRUE)
 plot(perf.pls2.liver , criterion = 'Q2.total')
 perf.spls1.liver = perf(spls1.liver, validation = 'Mfold', 
                         folds = 3, nrepeat = 3, progressBar = TRUE)
 plot(perf.spls1.liver , criterion = 'Q2')
 perf.spls2.liver = perf(spls2.liver, validation = 'Mfold', 
                         folds = 3, nrepeat = 3, progressBar = TRUE)
 plot(perf.spls2.liver , criterion = 'Q2.total')
 
 ## ---- plot for perf.(s)plsda
\dontrun{
data(breast.tumors)
X <- breast.tumors$gene.exp
Y <- factor(breast.tumors$sample$treatment)

res <- splsda(X, Y, ncomp = 2, keepX = c(25, 25))
set.seed(42)
breast.perf <- perf(res, nrepeat = 5)

plot(breast.perf)
plot(breast.perf, col=1:3)
plot(breast.perf, col=1:3, sd=FALSE)
}
}
\references{
Rohart F, Gautier B, Singh A, Lê Cao K-A. mixOmics: an R package for 'omics
feature selection and multiple data integration. PLoS Comput Biol 13(11):
e1005752

Rohart F, Gautier B, Singh A, Lê Cao K-A. mixOmics: an R package for 'omics
feature selection and multiple data integration. PLoS Comput Biol 13(11):
e1005752
}
\seealso{
\code{\link{pls}}, \code{\link{spls}}, \code{\link{plsda}},
\code{\link{splsda}}, \code{\link{perf}}.

\code{\link{pls}}, \code{\link{spls}}, \code{\link{plsda}},
\code{\link{splsda}}, \code{\link{perf}}.
}
\author{
Ignacio González, Florian Rohart, Francois Bartolo, Kim-Anh Lê Cao, Al J Abadi

Ignacio González, Florian Rohart, Francois Bartolo, Kim-Anh Lê Cao, Al J Abadi
}
\keyword{hplot}
\keyword{multivariate}
\keyword{regression}
